(defpackage :test
  (:use :ss))

(in-package :test)

(let* ((t1 (make-thread (lambda ()
                          (let ((mak 0)
                                (prev-time (%get-time)))
                            (labels ((stuff ()
                                       (console.print "************************" (%::%incf mak)
                                                      (let* ((time (%get-time))
                                                             (diff (- time prev-time)))
                                                        (set! prev-time time)
                                                        diff))
                                       (when (< mak 20)
                                         (set-timeout 100 #'stuff))))
                              (set-timeout 100 #'stuff)))
                          (let ((receivers (make-hash :foo (lambda (a b)
                                                             (console.log "Got :FOO" a b)))))
                            (labels ((rec ()
                                       (%receive receivers)
                                       (rec)))
                              (rec)))))))

  (labels ((rec (i)
             (when (> i 0)
               (make-thread (lambda ()
                              (labels ((rec (n)
                                         (when (> n 0)
                                           (%sendmsg t1 :foo i n)
                                           (rec (- n 1)))))
                                (rec 50))))
               (rec (- i 1)))))
    (rec 10)))
